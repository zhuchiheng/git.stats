(()=>{"use strict";var t={144:function(t,n,e){var a,o=this&&this.__createBinding||(Object.create?function(t,n,e,a){void 0===a&&(a=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,a,o)}:function(t,n,e,a){void 0===a&&(a=e),t[a]=n[e]}),r=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,"default",{enumerable:!0,value:n})}:function(t,n){t.default=n}),i=this&&this.__importStar||(a=function(t){return a=Object.getOwnPropertyNames||function(t){var n=[];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[n.length]=e);return n},a(t)},function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e=a(t),i=0;i<e.length;i++)"default"!==e[i]&&o(n,t,e[i]);return r(n,t),n}),s=this&&this.__awaiter||function(t,n,e,a){return new(e||(e=Promise))((function(o,r){function i(t){try{l(a.next(t))}catch(t){r(t)}}function s(t){try{l(a.throw(t))}catch(t){r(t)}}function l(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(i,s)}l((a=a.apply(t,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.activate=function(t){const n=l.window.createStatusBarItem(l.StatusBarAlignment.Right,1e3);n.text="$(graph-line) Git Stats",n.tooltip="Click to view your Git contribution statistics",n.command="git-stats.showStats";const e=()=>{l.workspace.workspaceFolders?n.show():n.hide()};e(),t.subscriptions.push(l.workspace.onDidChangeWorkspaceFolders((()=>e()))),t.subscriptions.push(n);let a=l.commands.registerCommand("git-stats.showStats",(()=>s(this,void 0,void 0,(function*(){const n=l.workspace.workspaceFolders;if(!n)return void l.window.showErrorMessage("Please open a workspace with a Git repository");const e=n[0].uri.fsPath,a=(0,c.simpleGit)(e);try{if(!(yield a.checkIsRepo()))return void l.window.showErrorMessage("This workspace is not a Git repository");const n=new d.GitContributionAnalyzer(a),e=new u.ContributionVisualization(t,n);l.window.withProgress({location:l.ProgressLocation.Notification,title:"Analyzing Git history...",cancellable:!1},(t=>s(this,void 0,void 0,(function*(){const t=yield n.getContributionStats();yield e.show(t)}))))}catch(t){l.window.showErrorMessage("Error analyzing Git history: "+t)}}))));t.subscriptions.push(a)};const l=i(e(398)),c=e(807),d=e(879),u=e(985)},879:function(t,n,e){var a,o=this&&this.__createBinding||(Object.create?function(t,n,e,a){void 0===a&&(a=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,a,o)}:function(t,n,e,a){void 0===a&&(a=e),t[a]=n[e]}),r=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,"default",{enumerable:!0,value:n})}:function(t,n){t.default=n}),i=this&&this.__importStar||(a=function(t){return a=Object.getOwnPropertyNames||function(t){var n=[];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[n.length]=e);return n},a(t)},function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e=a(t),i=0;i<e.length;i++)"default"!==e[i]&&o(n,t,e[i]);return r(n,t),n}),s=this&&this.__awaiter||function(t,n,e,a){return new(e||(e=Promise))((function(o,r){function i(t){try{l(a.next(t))}catch(t){r(t)}}function s(t){try{l(a.throw(t))}catch(t){r(t)}}function l(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(i,s)}l((a=a.apply(t,n||[])).next())}))},l=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0}),n.GitContributionAnalyzer=void 0;const c=l(e(807)),d=l(e(716)),u=i(e(383)),h=i(e(3));n.GitContributionAnalyzer=class{constructor(t,n={}){this.repoPath="",this.git=t,this.config={excludePatterns:["**/*.pb.go","**/*.pb.js","**/*.pb.ts","**/*_pb2.py","**/*_pb3.py","**/generated/**","**/*.pb.cs",...n.excludePatterns||[]]}}isProtobufGeneratedFile(t){if(t.includes("Protos/")||t.includes("Protos\\")){if(t.toLowerCase().endsWith(".cs"))try{u.readFileSync(t,"utf8").split("\n").slice(0,5).join("\n");return!0}catch(t){return!0}return!0}if(!u.existsSync(t))return!1;if(t.toLowerCase().endsWith(".cs"))try{const n=u.readFileSync(t,"utf8").split("\n").slice(0,20).join("\n"),e=["Generated by the protocol buffer compiler","<auto-generated>","DO NOT EDIT","using pb = global::Google.Protobuf","using pbc = global::Google.Protobuf.Collections","namespace Google.Protobuf","#pragma warning disable"].some((t=>n.includes(t)));return e}catch(t){return!1}return this.config.excludePatterns.some((n=>{const e=n.replace(/\./g,"\\.").replace(/\*\*/g,".*").replace(/\*/g,"[^/]*"),a=new RegExp(e).test(t);return a}))}shouldIncludeFile(t){if(t.includes("Protos/")||t.includes("Protos\\"))return!1;const n=h.join(this.repoPath,t),e=this.isProtobufGeneratedFile(n);return!e}getLastCommitTime(){return s(this,void 0,void 0,(function*(){try{const t=yield this.git.log(["-1","--pretty=format:%aI"]);if(t&&t.latest&&t.latest.hash){const n=t.latest.hash.trim(),e=(0,d.default)(n);if(e.isValid())return e}}catch(t){}return(0,d.default)()}))}getContributionStatsForDeveloper(t,n,e,a){return s(this,void 0,void 0,(function*(){return yield this.getContributionStats(n,e,a,t)}))}getContributionStats(){return s(this,arguments,void 0,(function*(t=7,n,e,a){let o,r;n&&e?(r=(0,d.default)(n).startOf("day"),o=(0,d.default)(e).endOf("day")):(o=yield this.getLastCommitTime(),o.isValid()||(o=(0,d.default)()),r=o.clone().subtract(t-1,"days").startOf("day"),o=o.clone().endOf("day"));try{const t=["--all","--no-merges","--numstat","--date=iso-strict","--pretty=format:commit %H%n%an%n%aI%n%s%n","--since",r.format("YYYY-MM-DD HH:mm:ss"),"--until",o.format("YYYY-MM-DD HH:mm:ss"),"--invert-grep","--grep=^WIP","--grep=^stash","--grep=^\\[STASH\\]","--grep=^\\[stash\\]"];a&&"all"!==a&&t.push("--author="+a);const n=yield this.git.log(t);if(!n||!n.all||0===n.all.length)return{};const e={},i=n.all[0].hash.split("\ncommit ");for(const t of i){if(!t.trim())continue;const n=t.split("\n");if(n.length<4)continue;n[0].trim();const a=n[1].trim(),i=n[2].trim(),s=n[3].trim();if(a.toLowerCase().includes("stash")||s.toLowerCase().includes("stash")||s.startsWith("WIP")||s.startsWith("[STASH]")||s.startsWith("[stash]"))continue;const l=(0,d.default)(i);if(!l.isValid())continue;e[a]||(e[a]={author:a,email:"",startDate:r,endDate:o,totalCommits:0,totalInsertions:0,totalDeletions:0,totalFiles:0,dailyStats:{},hourlyStats:{}});const c=l.format("YYYY-MM-DD");e[a].dailyStats[c]||(e[a].dailyStats[c]={commits:0,insertions:0,deletions:0,files:0});const u=l.format("HH");e[a].hourlyStats[u]||(e[a].hourlyStats[u]={commits:0,insertions:0,deletions:0,files:0}),e[a].totalCommits++,e[a].dailyStats[c].commits++,e[a].hourlyStats[u].commits++;for(let t=4;t<n.length;t++){const o=n[t].trim();if(!o)continue;const[r,i,s]=o.split("\t");if(!s)continue;if(!this.shouldIncludeFile(s))continue;const l="-"===r?0:parseInt(r)||0,d="-"===i?0:parseInt(i)||0;e[a].totalInsertions+=l,e[a].totalDeletions+=d,e[a].totalFiles++,e[a].dailyStats[c].insertions+=l,e[a].dailyStats[c].deletions+=d,e[a].dailyStats[c].files++,e[a].hourlyStats[u].insertions+=l,e[a].hourlyStats[u].deletions+=d,e[a].hourlyStats[u].files++}}for(const t in e)e[t].startDate=r,e[t].endDate=o;for(const t in e){const n=r.clone();for(;n.isSameOrBefore(o,"day");){const a=n.format("YYYY-MM-DD");e[t].dailyStats[a]||(e[t].dailyStats[a]={commits:0,insertions:0,deletions:0,files:0}),n.add(1,"day")}}for(const t in e)for(let n=0;n<24;n++){const a=n.toString().padStart(2,"0");e[t].hourlyStats[a]||(e[t].hourlyStats[a]={commits:0,insertions:0,deletions:0,files:0})}return e}catch(t){throw t}}))}analyzeRepository(t,n,e){return s(this,void 0,void 0,(function*(){this.repoPath=t;const a=(0,c.default)(t),o={};try{const t=(yield a.raw(["log","--all","--no-merges","--numstat","--format=commit:%H%nauthor:%aN%nemail:%aE%ndate:%aI","--since",n.format("YYYY-MM-DD HH:mm:ss"),"--until",e.format("YYYY-MM-DD HH:mm:ss")])).split("\ncommit:").filter((t=>t.trim()));for(const a of t){const t=a.trim().split("\n");let r="",i="",s="",l="",c=0,u=0,h=0;for(const n of t)if(n.startsWith("commit:"))l=n.substring(7).trim();else if(n.startsWith("author:"))r=n.substring(7).trim();else if(n.startsWith("email:"))i=n.substring(6).trim();else if(n.startsWith("date:"))s=n.substring(5).trim();else if(n.trim()&&!n.startsWith("commit:")){const t=n.split("\t");if(3===t.length){const[n,e,a]=t;if(!this.shouldIncludeFile(a))continue;const o="-"===n?0:parseInt(n)||0,r="-"===e?0:parseInt(e)||0;c+=o,u+=r,h++}}const p=(0,d.default)(s);if(!p.isValid())continue;o[r]||(o[r]={author:r,email:i,startDate:n,endDate:e,totalCommits:0,totalInsertions:0,totalDeletions:0,totalFiles:0,dailyStats:{},hourlyStats:{}});const m=p.format("YYYY-MM-DD"),g=p.format("HH");o[r].dailyStats[m]||(o[r].dailyStats[m]={commits:0,insertions:0,deletions:0,files:0}),o[r].hourlyStats[g]||(o[r].hourlyStats[g]={commits:0,insertions:0,deletions:0,files:0}),o[r].totalCommits++,o[r].totalInsertions+=c,o[r].totalDeletions+=u,o[r].totalFiles+=h,o[r].dailyStats[m].commits++,o[r].dailyStats[m].insertions+=c,o[r].dailyStats[m].deletions+=u,o[r].dailyStats[m].files+=h,o[r].hourlyStats[g].commits++,o[r].hourlyStats[g].insertions+=c,o[r].hourlyStats[g].deletions+=u,o[r].hourlyStats[g].files+=h}for(const t in o){const a=n.clone().startOf("day");for(;a.isSameOrBefore(e,"day");){const n=a.format("YYYY-MM-DD");o[t].dailyStats[n]||(o[t].dailyStats[n]={commits:0,insertions:0,deletions:0,files:0}),a.add(1,"day")}for(let n=0;n<24;n++){const e=n.toString().padStart(2,"0");o[t].hourlyStats[e]||(o[t].hourlyStats[e]={commits:0,insertions:0,deletions:0,files:0})}}return o}catch(t){throw t}}))}}},985:function(t,n,e){var a,o=this&&this.__createBinding||(Object.create?function(t,n,e,a){void 0===a&&(a=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(t,a,o)}:function(t,n,e,a){void 0===a&&(a=e),t[a]=n[e]}),r=this&&this.__setModuleDefault||(Object.create?function(t,n){Object.defineProperty(t,"default",{enumerable:!0,value:n})}:function(t,n){t.default=n}),i=this&&this.__importStar||(a=function(t){return a=Object.getOwnPropertyNames||function(t){var n=[];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(n[n.length]=e);return n},a(t)},function(t){if(t&&t.__esModule)return t;var n={};if(null!=t)for(var e=a(t),i=0;i<e.length;i++)"default"!==e[i]&&o(n,t,e[i]);return r(n,t),n}),s=this&&this.__awaiter||function(t,n,e,a){return new(e||(e=Promise))((function(o,r){function i(t){try{l(a.next(t))}catch(t){r(t)}}function s(t){try{l(a.throw(t))}catch(t){r(t)}}function l(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(i,s)}l((a=a.apply(t,n||[])).next())}))},l=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0}),n.ContributionVisualization=void 0;const c=i(e(398)),d=l(e(716));n.ContributionVisualization=class{constructor(t,n){this.context=t,this.analyzer=n,this.disposables=[],this.globalCache={}}dispose(){var t;null===(t=this.panel)||void 0===t||t.dispose(),this.disposables.forEach((t=>t.dispose()))}update(t){return s(this,void 0,void 0,(function*(){this.panel&&(yield this.updateVisualization(t))}))}updateStats(t){return s(this,void 0,void 0,(function*(){var n;if(!this.panel)return;const e=Object.values(t),a=this.getAllDates(t),o=this.getHoursArray(),r=this.prepareCommitData(e,a),i=this.prepareChangeData(e,a),s=this.prepareHourlyCommitData(e,o),l=this.prepareHourlyChangeData(e,o);(null===(n=this.panel)||void 0===n?void 0:n.webview)&&this.panel.webview.postMessage({command:"updateData",commitData:r,changeData:i,hourlyCommitData:s,hourlyChangeData:l})}))}updateVisualization(t){return s(this,void 0,void 0,(function*(){if(!this.panel)return;const n=Object.values(t),e=this.getAllDates(t),a=this.getHoursArray(),o=this.prepareCommitData(n,e),r=this.prepareChangeData(n,e),i=this.prepareHourlyCommitData(n,a),s=this.prepareHourlyChangeData(n,a),l=this.prepareCalendarData(n,e),c=n.map((t=>({author:t.author,totalCommits:t.totalCommits||0,totalInsertions:t.totalInsertions||0,totalDeletions:t.totalDeletions||0,totalFiles:t.totalFiles||0})));this.panel&&(yield this.panel.webview.postMessage({command:"updateData",commitData:o,changeData:r,hourlyCommitData:i,hourlyChangeData:s,authorStats:c,calendarData:l}))}))}handleTimeRangeChange(t,n,e){return s(this,void 0,void 0,(function*(){var a;try{if(this.globalCache=yield this.analyzer.getContributionStats(t,n,e),null===(a=this.panel)||void 0===a?void 0:a.webview){const t=Object.keys(this.globalCache).filter((t=>!t.toLowerCase().includes("stash")));this.panel.webview.postMessage({command:"updateDevelopers",developers:t})}yield this.applyDeveloperFilter()}catch(t){}}))}applyDeveloperFilter(t){return s(this,void 0,void 0,(function*(){try{const n=t&&"all"!==t?{[t]:this.globalCache[t]}:this.globalCache;yield this.update(n)}catch(t){}}))}show(t){return s(this,void 0,void 0,(function*(){if(this.globalCache=t,this.panel){this.webview=this.panel.webview,this.panel.reveal();const n=Object.keys(t);this.panel.webview.postMessage({command:"updateDevelopers",developers:n})}else this.panel=c.window.createWebviewPanel("codeActivityStats","Git Stats",c.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0,localResourceRoots:[this.context.extensionUri]}),this.webview=this.panel.webview,this.panel.onDidDispose((()=>{this.panel=void 0}),null,this.disposables),this.panel.webview.onDidReceiveMessage((t=>s(this,void 0,void 0,(function*(){switch(t.command){case"timeRangeChanged":yield this.handleTimeRangeChange(t.days,t.startDate,t.endDate);break;case"developerChanged":yield this.handleDeveloperChange(t.developer)}}))),void 0,this.disposables);const n=this.getAllDates(t),e=this.prepareCommitData(Object.values(t),n),a=this.prepareChangeData(Object.values(t),n),o=this.prepareHourlyCommitData(Object.values(t),this.getHoursArray()),r=this.prepareHourlyChangeData(Object.values(t),this.getHoursArray());this.panel&&(this.panel.webview.html=this.getWebviewContent(t,e,a,o,r))}))}handleDeveloperChange(t){return s(this,void 0,void 0,(function*(){try{yield this.applyDeveloperFilter(t)}catch(t){}}))}getWebviewContent(t,n,e,a,o){const r=Object.values(t),i=this.getAllDates(t),s=this.prepareCalendarData(r,i);return`<!DOCTYPE html>\n        <html>\n        <head>\n            <title>Git Stats</title>\n            <script src="${this.webview.asWebviewUri(c.Uri.joinPath(this.context.extensionUri,"node_modules","chart.js","dist","chart.umd.js"))}"><\/script>\n            <style>\n                :root {\n                    --vscode-dropdown-background: var(--vscode-input-background);\n                    --vscode-dropdown-foreground: var(--vscode-input-foreground);\n                    --vscode-dropdown-border: var(--vscode-input-border);\n                }\n                .container {\n                    padding: 20px;\n                    max-width: 1600px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                .header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: 20px;\n                }\n                .time-range-selector {\n                    display: flex;\n                    align-items: center;\n                    gap: 10px;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                }\n                .date-picker {\n                    background-color: var(--vscode-dropdown-background);\n                    color: var(--vscode-dropdown-foreground);\n                    border: 1px solid var(--vscode-dropdown-border);\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 13px;\n                }\n                .date-separator {\n                    color: var(--vscode-foreground);\n                    margin: 0 4px;\n                }\n                .chart-container {\n                    position: relative;\n                    height: 400px;\n                    margin-bottom: 20px;\n                    background-color: var(--vscode-editor-background);\n                    padding: 15px;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n                }\n                .calendar-container {\n                    position: relative;\n                    height: 900px;\n                    margin-bottom: 20px;\n                    background-color: var(--vscode-editor-background);\n                    padding: 15px;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n                }\n                .chart-title {\n                    margin-bottom: 15px;\n                    color: var(--vscode-foreground);\n                    font-size: 18px;\n                    font-weight: 500;\n                }\n                .summary-table {\n                    width: 100%;\n                    border-collapse: collapse;\n                    margin-top: 20px;\n                    margin-bottom: 30px;\n                    background-color: var(--vscode-editor-background);\n                    border-radius: 8px;\n                    overflow: hidden;\n                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n                }\n                .summary-table th, .summary-table td {\n                    padding: 12px;\n                    text-align: left;\n                    border: 1px solid var(--vscode-dropdown-border);\n                }\n                .summary-table th {\n                    background-color: var(--vscode-dropdown-background);\n                    font-weight: 500;\n                }\n                .summary-table tr:hover {\n                    background-color: var(--vscode-list-hoverBackground);\n                }\n                .pie-chart-container {\n                    position: absolute;\n                    top: 100px;\n                    left: 100px;\n                    width: 150px;\n                    height: 150px;\n                    background-color: rgba(255, 255, 255, 0.05);\n                    border-radius: 8px;\n                    cursor: move;\n                    z-index: 1000;\n                    backdrop-filter: blur(3px);\n                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.08);\n                }\n                .pie-chart-container:hover {\n                    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n                }\n                select {\n                    background-color: var(--vscode-dropdown-background);\n                    color: var(--vscode-dropdown-foreground);\n                    border: 1px solid var(--vscode-dropdown-border);\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 13px;\n                }\n                select:focus {\n                    outline: none;\n                    border-color: var(--vscode-focusBorder);\n                }\n                h1 {\n                    margin: 0;\n                    font-size: 24px;\n                    color: var(--vscode-foreground);\n                }\n            </style>\n        </head>\n        <body>\n            <div class="container">\n                <div class="header">\n                    <h1>Git Stats</h1>\n                    <div class="time-range-selector">\n                        <input type="date" id="startDate" class="date-picker" title="Start Date">\n                        <span class="date-separator">to</span>\n                        <input type="date" id="endDate" class="date-picker" title="End Date">\n                        <select id="timeRange">\n                            <option value="custom" selected>Custom Range</option>\n                            <option value="7">Last Week</option>\n                            <option value="30">Last Month</option>\n                            <option value="90">Last 3 Months</option>\n                            <option value="180">Last 6 Months</option>\n                            <option value="365">Last Year</option>\n                        </select>\n                    </div>\n                    <div class="developer-selector"> \x3c!-- 新增开发者选择器 --\x3e\n                        <select id="developerSelect">\n                            <option value="all">All developers</option>\n                            ${r.map((t=>'<option value="'+t.author+'">'+t.author+"</option>")).join("")}\n                        </select>\n                    </div>\n                </div>\n                \x3c!-- Daily Charts --\x3e\n                <div class="chart-container">\n                    <div class="pie-chart-container">\n                        <canvas id="pieChart"></canvas>\n                    </div>\n                    <h2 class="chart-title">Daily Commits</h2>\n                    <canvas id="commitChart"></canvas>\n                </div>\n                <div class="chart-container">\n                    <div class="pie-chart-container">\n                        <canvas id="linesChangedPieChart"></canvas>\n                    </div>\n                    <h2 class="chart-title">Daily Lines Changed</h2>\n                    <canvas id="changeChart"></canvas>\n                </div>\n\n                \x3c!-- Hourly Charts --\x3e\n                <div class="chart-container">\n                    <h2 class="chart-title">Hourly Commits</h2>\n                    <canvas id="hourlyCommitChart"></canvas>\n                </div>\n                <div class="chart-container">\n                    <h2 class="chart-title">Hourly Lines Changes</h2>\n                    <canvas id="hourlyChangeChart"></canvas>\n                </div>\n\n                \x3c!-- 日历图表 --\x3e\n                <div class="calendar-container">\n                    <h2 class="chart-title">Contribution Calendar</h2>\n                    <div id="calendar" style="display: grid; grid-template-columns: repeat(6, 1fr); gap: 4px; max-height: 800px; overflow-y: auto; padding: 4px;"></div>\n                </div>\n\n                <h2>Summary</h2>\n                <table class="summary-table">\n                    <tr>\n                        <th>Author</th>\n                        <th>Total Commits</th>\n                        <th>Lines Added</th>\n                        <th>Lines Deleted</th>\n                        <th>Files Changed</th>\n                    </tr>\n                    `+r.map((t=>"\n                        <tr>\n                            <td>"+t.author+"</td>\n                            <td>"+t.totalCommits+"</td>\n                            <td>"+t.totalInsertions+"</td>\n                            <td>"+t.totalDeletions+"</td>\n                            <td>"+t.totalFiles+"</td>\n                        </tr>\n                    ")).join("")+`\n                </table>\n            </div>\n            <script>\n                // 拖动功能\n                const pieChartContainers = document.querySelectorAll('.pie-chart-container');\n                let isDragging = false;\n                let currentX;\n                let currentY;\n                let initialX;\n                let initialY;\n                let activePieChart = null;\n\n                pieChartContainers.forEach(container => {\n                    container.addEventListener('mousedown', (e) => {\n                        activePieChart = container;\n                        dragStart(e);\n                    });\n                });\n                \n                document.addEventListener('mousemove', drag);\n                document.addEventListener('mouseup', dragEnd);\n\n                function dragStart(e) {\n                    if (!activePieChart) return;\n                    initialX = e.clientX - activePieChart.offsetLeft;\n                    initialY = e.clientY - activePieChart.offsetTop;\n                    isDragging = true;\n                }\n\n                function drag(e) {\n                    if (isDragging && activePieChart) {\n                        e.preventDefault();\n                        currentX = e.clientX - initialX;\n                        currentY = e.clientY - initialY;\n                        \n                        // 限制在图表区域内\n                        const container = activePieChart.closest('.chart-container');\n                        const maxX = container.offsetWidth - activePieChart.offsetWidth;\n                        const maxY = container.offsetHeight - activePieChart.offsetHeight;\n                        \n                        currentX = Math.max(0, Math.min(currentX, maxX));\n                        currentY = Math.max(0, Math.min(currentY, maxY));\n\n                        activePieChart.style.left = currentX + 'px';\n                        activePieChart.style.top = currentY + 'px';\n                    }\n                }\n\n                function dragEnd() {\n                    isDragging = false;\n                    activePieChart = null;\n                }\n\n                const vscode = acquireVsCodeApi();\n                let commitChart, changeChart, pieChart, linesChangedPieChart;\n\n                // 解析数据\n                const commitData = ${JSON.stringify(n)};\n                const changeData = ${JSON.stringify(e)};\n                const hourlyCommitData = ${JSON.stringify(a)};\n                const hourlyChangeData = ${JSON.stringify(o)};\n\n                // 设置初始日期范围\n                const today = new Date();\n                today.setHours(0, 0, 0, 0);  // 设置时间为当天的0点\n                const lastCommitDate = new Date(endDate);\n                lastCommitDate.setHours(0, 0, 0, 0);  // 设置时间为当天的0点\n\n                document.getElementById('startDate').value = startDate;\n                document.getElementById('endDate').value = endDate;\n                \n                // 如果最后一次提交是今天，则设置为"Last Week"\n                if (lastCommitDate.getTime() === today.getTime()) {\n                    document.getElementById('timeRange').value = '7';  // Last Week\n                } else {\n                    document.getElementById('timeRange').value = 'custom';  // Custom Range\n                }\n\n                // 创建提交图表\n                function createCommitChart(data) {\n                    const ctx = document.getElementById('commitChart');\n                    if (commitChart) {\n                        commitChart.destroy();\n                    }\n                    commitChart = new Chart(ctx, {\n                        type: 'line',\n                        data: data,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            interaction: {\n                                intersect: false,\n                                mode: 'index'\n                            },\n                            plugins: {\n                                legend: {\n                                    position: 'top',\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            return context.dataset.label + ': ' + context.raw + ' commits';\n                                        }\n                                    }\n                                }\n                            },\n                            elements: {\n                                line: {\n                                    tension: 0.4,\n                                    cubicInterpolationMode: 'monotone'\n                                }\n                            },\n                            scales: {\n                                x: {\n                                    title: {\n                                        display: true,\n                                        text: 'Date'\n                                    },\n                                    ticks: {\n                                        maxRotation: 45,\n                                        minRotation: 45\n                                    }\n                                },\n                                y: {\n                                    beginAtZero: true,\n                                    title: {\n                                        display: true,\n                                        text: 'Number of Commits'\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                // 创建变更图表\n                function createChangeChart(data) {\n                    const ctx = document.getElementById('changeChart');\n                    if (changeChart) {\n                        changeChart.destroy();\n                    }\n                    changeChart = new Chart(ctx, {\n                        type: 'bar',\n                        data: data,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            interaction: {\n                                intersect: false,\n                                mode: 'index'\n                            },\n                            plugins: {\n                                legend: {\n                                    position: 'top',\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            return context.dataset.label + ': ' + context.raw + ' lines changed';\n                                        }\n                                    }\n                                }\n                            },\n                            scales: {\n                                x: {\n                                    title: {\n                                        display: true,\n                                        text: 'Date'\n                                    },\n                                    ticks: {\n                                        maxRotation: 45,\n                                        minRotation: 45\n                                    }\n                                },\n                                y: {\n                                    beginAtZero: true,\n                                    title: {\n                                        display: true,\n                                        text: 'Lines Changed'\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                // 创建饼图\n                function createPieChart(data) {\n                    const ctx = document.getElementById('pieChart');\n                    const totalCommits = data.datasets.reduce((acc, dataset) => {\n                        return acc + dataset.data.reduce((sum, val) => sum + val, 0);\n                    }, 0);\n                    \n                    const pieData = {\n            labels: data.datasets.map(d => d.label),\n            datasets: [{\n                data: data.datasets.map(d => \n                    d.data.reduce((sum, val) => sum + val, 0)\n                ),\n                backgroundColor: data.datasets.map(d => d.backgroundColor),\n                borderColor: 'rgba(0, 0, 0, 0.1)',\n                borderWidth: 1\n            }]\n        };\n\n                    if (pieChart) {\n                        pieChart.destroy();\n                    }\n\n                    pieChart = new Chart(ctx, {\n                        type: 'pie',\n                        data: pieData,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                                legend: {\n                                    display: false\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            const value = context.raw;\n                                            const percentage = ((value / totalCommits) * 100).toFixed(1);\n                                            return [\n                                                context.label,\n                                                'Commits: ' + value,\n                                                'Percentage: ' + percentage + '%'\n                                            ];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                // 创建Lines Changed饼图\n                function createLinesChangedPieChart(data) {\n                    const ctx = document.getElementById('linesChangedPieChart');\n                    const totalLines = data.datasets.reduce((acc, dataset) => {\n                        return acc + dataset.data.reduce((sum, val) => sum + val, 0);\n                    }, 0);\n                    \n                    const pieData = {\n                        labels: data.datasets.map(d => d.label),\n                        datasets: [{\n                            data: data.datasets.map(d => \n                                d.data.reduce((sum, val) => sum + val, 0)\n                            ),\n                            backgroundColor: data.datasets.map(d => d.backgroundColor),\n                            borderColor: 'rgba(0, 0, 0, 0.1)',\n                            borderWidth: 1\n                        }]\n                    };\n\n                    if (linesChangedPieChart) {\n                        linesChangedPieChart.destroy();\n                    }\n\n                    linesChangedPieChart = new Chart(ctx, {\n                        type: 'pie',\n                        data: pieData,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            plugins: {\n                                legend: {\n                                    display: false\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            const value = context.raw;\n                                            const percentage = ((value / totalLines) * 100).toFixed(1);\n                                            return [\n                                                context.label,\n                                                'Lines Changed: ' + value,\n                                                'Percentage: ' + percentage + '%'\n                                            ];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                function createHourlyCommitChart(data) {\n                    const ctx = document.getElementById('hourlyCommitChart');\n                    const existingChart = Chart.getChart(ctx);\n                    if (existingChart) {\n                        existingChart.destroy();\n                    }\n                    \n                    new Chart(ctx, {\n                        type: 'line',\n                        data: data,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            interaction: {\n                                intersect: false,\n                                mode: 'index'\n                            },\n                            plugins: {\n                                legend: {\n                                    position: 'top',\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            return context.dataset.label + ': ' + context.raw + ' commits';\n                                        }\n                                    }\n                                }\n                            },\n                            scales: {\n                                x: {\n                                    title: {\n                                        display: true,\n                                        text: 'Hour'\n                                    }\n                                },\n                                y: {\n                                    beginAtZero: true,\n                                    title: {\n                                        display: true,\n                                        text: 'Number of Commits'\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n\n                function createHourlyChangeChart(data) {\n                    const ctx = document.getElementById('hourlyChangeChart');\n                    const existingChart = Chart.getChart(ctx);\n                    if (existingChart) {\n                        existingChart.destroy();\n                    }\n                    \n                    new Chart(ctx, {\n                        type: 'bar',\n                        data: data,\n                        options: {\n                            responsive: true,\n                            maintainAspectRatio: false,\n                            interaction: {\n                                intersect: false,\n                                mode: 'index'\n                            },\n                            plugins: {\n                                legend: {\n                                    position: 'top',\n                                },\n                                tooltip: {\n                                    callbacks: {\n                                        label: function(context) {\n                                            return context.dataset.label + ': ' + context.raw + ' lines changed';\n                                        }\n                                    }\n                                }\n                            },\n                            scales: {\n                                x: {\n                                    title: {\n                                        display: true,\n                                        text: 'Hour'\n                                    }\n                                },\n                                y: {\n                                    beginAtZero: true,\n                                    title: {\n                                        display: true,\n                                        text: 'Lines Changed'\n                                    },\n                                    stacked: true  // 启用堆叠效果\n                                }\n                            }\n                        }\n                    });\n                }\n\n                // 初始化所有图表\n                createCommitChart(commitData);\n                createChangeChart(changeData);\n                createPieChart(commitData);\n                createLinesChangedPieChart(changeData);\n                createHourlyCommitChart(hourlyCommitData);  // 创建每小时提交次数图表\n                createHourlyChangeChart(hourlyChangeData);  // 创建每小时代码变更行数图表\n\n                // 更新图表数据的消息处理\n                window.addEventListener('message', event => {\n                    const message = event.data;\n                    switch (message.command) {\n                        case 'updateDevelopers':\n                            // 更新开发者下拉列表\n                            const developerSelect = document.getElementById('developerSelect');\n                            if (developerSelect && message.developers) {\n                                const currentValue = developerSelect.value;\n                                developerSelect.innerHTML = \n                                    '<option value="all">All developers</option>' + \n                                    message.developers.map(author => \n                                        '<option value="' + author + '">' + author + '</option>'\n                                    ).join('');\n                                // 保持当前选中的开发者\n                                if (currentValue && message.developers.includes(currentValue)) {\n                                    developerSelect.value = currentValue;\n                                } else {\n                                    developerSelect.value = 'all';\n                                }\n                            }\n                            break;\n                        case 'updateData':\n                            // 更新所有图表\n                            if (commitChart) {\n                                commitChart.data = message.commitData;\n                                commitChart.update();\n                                createPieChart(message.commitData);\n                            }\n                            if (changeChart) {\n                                changeChart.data = message.changeData;\n                                changeChart.update();\n                                createLinesChangedPieChart(message.changeData);\n                            }\n                            \n                            if (message.hourlyCommitData) {\n                                createHourlyCommitChart(message.hourlyCommitData);\n                            }\n                            if (message.hourlyChangeData) {\n                                createHourlyChangeChart(message.hourlyChangeData);\n                            }\n\n                            if (message.calendarData) {\n                                renderCalendar(message.calendarData);\n                            }\n\n                            // 更新summary表格\n                            const summaryTable = document.querySelector('.summary-table');\n                            if (summaryTable && message.authorStats) {\n                                // 保留表头\n                                const tableHeader = summaryTable.querySelector('tr');\n                                if (tableHeader) {\n                                    summaryTable.innerHTML = '';\n                                    summaryTable.appendChild(tableHeader);\n\n                                    // 使用后端发送的准确统计数据\n                                    message.authorStats.forEach(authorStat => {\n                                        const row = document.createElement('tr');\n                                        const cells = [\n                                            authorStat.author,\n                                            authorStat.totalCommits || 0,\n                                            authorStat.totalInsertions || 0,\n                                            authorStat.totalDeletions || 0,\n                                            authorStat.totalFiles || 0\n                                        ];\n                                        cells.forEach(value => {\n                                            const cell = document.createElement('td');\n                                            cell.textContent = value.toString();\n                                            row.appendChild(cell);\n                                        });\n                                        summaryTable.appendChild(row);\n                                    });\n                                }\n                            }\n                            break;\n                    }\n                });\n\n                // 时间范围选择处理\n                const timeRangeSelect = document.getElementById('timeRange');\n                const startDateInput = document.getElementById('startDate');\n                const endDateInput = document.getElementById('endDate');\n\n                // 时间范围选择变化处理\n                timeRangeSelect.addEventListener('change', function(e) {\n                    const value = this.value;\n                    if (value === 'custom') {\n                        return; // 保持当前选择的日期不变\n                    }\n\n                    const days = parseInt(value);\n                    const end = new Date();\n                    const start = new Date();\n                    start.setDate(end.getDate() - (days - 1)); // -1是因为包含今天\n\n                    startDateInput.value = start.toISOString().split('T')[0];\n                    endDateInput.value = end.toISOString().split('T')[0];\n\n                    // 通知扩展时间范围已更改\n                    vscode.postMessage({\n                        command: 'timeRangeChanged',\n                        days: days,\n                        startDate: startDateInput.value,\n                        endDate: endDateInput.value\n                    });\n                });\n\n                // 日期选择变化处理\n                function handleDateChange() {\n                    const start = new Date(startDateInput.value);\n                    const end = new Date(endDateInput.value);\n                    \n                    if (start && end && start <= end) {\n                        // 计算天数差异\n                        const diffTime = Math.abs(end - start);\n                        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1; // +1 包含开始日期\n                        \n                        // 设置下拉框为custom\n                        timeRangeSelect.value = 'custom';\n                        \n                        // 通知扩展时间范围已更改\n                        vscode.postMessage({\n                            command: 'timeRangeChanged',\n                            days: diffDays,\n                            startDate: startDateInput.value,\n                            endDate: endDateInput.value\n                        });\n                    }\n                }\n\n                startDateInput.addEventListener('change', handleDateChange);\n                endDateInput.addEventListener('change', handleDateChange);\n\n                // 预定义星期标题HTML (字符串格式)\n                const WEEKDAYS_HEADER_HTML = '<div style="display: grid; grid-template-columns: repeat(7, 1fr); margin-bottom: 8px; font-weight: 500;">' +\n                    ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']\n                        .map(day => '<div style="text-align: center">' + day + '</div>')\n                        .join('') +\n                    '</div>';\n\n                // 渲染日历\n                function renderCalendar(calendarData) {\n                    const container = document.getElementById('calendar');\n                    if (!container) return;\n\n                    // 清空容器\n                    container.innerHTML = "";\n\n                    // 创建横向日历容器\n                    const calendarWrapper = document.createElement('div');\n                    calendarWrapper.style.display = 'grid';\n                    calendarWrapper.style.gridTemplateColumns = 'repeat(8, 1fr)';\n                    calendarWrapper.style.gap = '8px';\n                    calendarWrapper.style.padding = '8px';\n\n                    // 按月份分组数据\n                    const months = {};\n                    calendarData.forEach(day => {\n                        const date = new Date(day.date);\n                        const month = date.toLocaleString('default', { month: 'long', year: 'numeric' });\n                        if (!months[month]) {\n                            months[month] = [];\n                        }\n                        months[month].push(day);\n                    });\n\n                    // 渲染每个月\n                    Object.entries(months).forEach(([month, days]) => {\n                        // 创建月份容器\n                        const monthContainer = document.createElement('div');\n                        monthContainer.style.display = 'flex';\n                        monthContainer.style.flexDirection = 'column';\n                        monthContainer.style.gap = '4px';\n\n                        // 添加月份标题\n                        const monthHeader = document.createElement('div');\n                        monthHeader.textContent = month;\n                        monthHeader.style.fontWeight = '500';\n                        monthHeader.style.marginBottom = '8px';\n                        monthContainer.appendChild(monthHeader);\n\n                        // 使用预定义的星期标题\n                        const weekRow = document.createElement('div');\n                        weekRow.innerHTML = WEEKDAYS_HEADER_HTML;\n                        monthContainer.appendChild(weekRow);\n\n                        // 创建日期网格\n                        const gridContainer = document.createElement('div');\n                        gridContainer.style.display = 'grid';\n                        gridContainer.style.gridTemplateColumns = 'repeat(7, 1fr)';\n                        gridContainer.style.gap = '2px';\n\n                        // 填充空白格\n                        const firstDay = new Date(days[0].date);\n                        const startDay = firstDay.getDay();\n                        for (let i = 0; i < startDay; i++) {\n                            const empty = document.createElement('div');\n                            gridContainer.appendChild(empty);\n                        }\n\n                        // 添加日期格\n                        days.forEach(day => {\n                            const cell = document.createElement('div');\n                            cell.style.backgroundColor = day.totalCommits > 0 \n                                ? \`rgba(46, 204, 113, \${day.colorIntensity * 0.2})\`\n                                : 'transparent';\n                            cell.style.width = '24px';\n                            cell.style.height = '24px';\n                            cell.style.borderRadius = '4px';\n                            cell.style.display = 'flex';\n                            cell.style.alignItems = 'center';\n                            cell.style.justifyContent = 'center';\n                            cell.style.fontSize = '12px';\n                            cell.title = \`Date: \${day.date}, Commits: \${day.totalCommits}\`;\n                            \n                            const dateNum = new Date(day.date).getDate();\n                            cell.textContent = dateNum;\n                            \n                            gridContainer.appendChild(cell);\n                        });\n\n                        monthContainer.appendChild(gridContainer);\n                        calendarWrapper.appendChild(monthContainer);\n                    });\n\n                    container.appendChild(calendarWrapper);\n                }\n\n                // 初始化日历\n                const calendarData = ${JSON.stringify(s)};\n                renderCalendar(calendarData);\n\n                // 新增开发者选择变化处理\n                const developerSelect = document.getElementById('developerSelect');\n                developerSelect.addEventListener('change', function(e) {\n                    const developer = this.value;\n                    vscode.postMessage({\n                        command: 'developerChanged',\n                        developer: developer\n                    });\n                });\n\n            <\/script>\n        </body>\n        </html>`}getAllDates(t){var n,e;const a=(0,d.default)(null===(n=Object.values(t)[0])||void 0===n?void 0:n.startDate).startOf("day"),o=(0,d.default)(null===(e=Object.values(t)[0])||void 0===e?void 0:e.endDate).endOf("day"),r=[];let i=a.clone();for(;i.isSameOrBefore(o,"day");)r.push(i.format("YYYY-MM-DD")),i.add(1,"day");return r}getHoursArray(){return Array.from({length:24},((t,n)=>n.toString().padStart(2,"0")))}prepareCommitData(t,n){const e=(t=t.filter((t=>!t.author.toLowerCase().includes("stash")))).map(((t,e)=>({label:t.author,data:n.map((n=>{var e;return(null===(e=t.dailyStats[n])||void 0===e?void 0:e.commits)||0})),borderColor:this.getColor(e),backgroundColor:this.getColor(e),fill:!1,tension:.4,cubicInterpolationMode:"monotone"})));return{labels:n,datasets:e}}prepareChangeData(t,n){const e=(t=t.filter((t=>!t.author.toLowerCase().includes("stash")))).map(((t,e)=>({label:t.author,data:n.map((n=>{const e=t.dailyStats[n];return e?e.insertions+e.deletions:0})),backgroundColor:this.getColor(e),stack:"combined"})));return{labels:n,datasets:e}}prepareHourlyCommitData(t,n){return{labels:n.map((t=>`${t}:00`)),datasets:t.filter((t=>!t.author.toLowerCase().includes("stash"))).map(((t,e)=>({label:t.author,data:n.map((n=>{var e;return(null===(e=t.hourlyStats[n])||void 0===e?void 0:e.commits)||0})),borderColor:this.getColor(e),backgroundColor:this.getColor(e),fill:!1,tension:.4})))}}prepareHourlyChangeData(t,n){return{labels:n.map((t=>`${t}:00`)),datasets:t.filter((t=>!t.author.toLowerCase().includes("stash"))).map(((t,e)=>({label:t.author,data:n.map((n=>{const e=t.hourlyStats[n];return((null==e?void 0:e.insertions)||0)+((null==e?void 0:e.deletions)||0)})),backgroundColor:this.getColor(e),stack:"combined"})))}}prepareCalendarData(t,n){return n.map((n=>{const e=t.reduce(((t,e)=>{var a;return t+((null===(a=e.dailyStats[n])||void 0===a?void 0:a.commits)||0)}),0);return{date:n,totalCommits:e,colorIntensity:Math.min(4,Math.floor(e/5))}}))}getColor(t){const n=["#2196F3","#4CAF50","#F44336","#FFC107","#9C27B0","#00BCD4","#FF9800","#795548","#607D8B","#E91E63"];return n[t%n.length]}}},383:t=>{t.exports=require("fs")},716:t=>{t.exports=require("moment")},3:t=>{t.exports=require("path")},807:t=>{t.exports=require("simple-git")},398:t=>{t.exports=require("vscode")}},n={};var e=function e(a){var o=n[a];if(void 0!==o)return o.exports;var r=n[a]={exports:{}};return t[a].call(r.exports,r,r.exports,e),r.exports}(144);module.exports=e})();